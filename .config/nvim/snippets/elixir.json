{
  "context create": {
    "prefix": "create",
    "description": "Add create functions to a context.",
    "body": [
      "@doc \"\"\"",
      "Creates a ${1:resource name} using the given attributes.",
      "\"\"\"",
      "@spec create_${2:resource_handle}(Map.t()) :: {:ok, ${3:ResourceSchema}.t()} | {:error, Ecto.Changeset.t()}",
      "def create_$2(attrs),",
      "  do: attrs |> create_$2_changeset() |> Repo.insert()",
      "",
      "@doc \"\"\"",
      "Returns a changeset for creating a $1.",
      "\"\"\"",
      "@spec create_$2_changeset(Map.t()) :: Ecto.Changeset.t()",
      "def create_$2_changeset(attrs),",
      "  do: $3.insert_changeset(%$3{}, attrs)",
      "",
      "$0"
    ]
  },
  "defmodule": {
    "prefix": "defmo",
    "body": [
      "defmodule ${1:module} do",
      "  $0",
      "end"
    ],
    "description": "Define a module"
  },
  "def": {
    "prefix": "def",
    "body": [
      "def ${1:name}(${2:args}) do",
      "  $0",
      "end"
    ],
    "description": "Define a function"
  },
  "defp": {
    "prefix": "defp",
    "body": [
      "defp ${1:name}(${2:args}) do",
      "  $0",
      "end"
    ],
    "description": "Define a private function"
  },
  "if .. do .. end": {
    "prefix": "if",
    "body": [
      "if ${1:condition} do",
      "  $0",
      "end"
    ]
  },
  "if .. do:": {
    "prefix": "if:",
    "body": "if ${1:condition}, do: $0"
  },
  "case": {
    "prefix": "case",
    "body": [
      "case $1 do",
      "  $2 -> ",
      "    $0",
      "end"
    ]
  },
  "for": {
    "prefix": "for",
    "body": [
      "for ${1:item} <- ${2:items} do",
      "  $0",
      "end"
    ]
  },
  "def + doc": {
    "prefix": "defd",
    "body": [
      "@doc \"\"\"",
      "${1:doc}",
      "\"\"\"",
      "def ${2:name}($3:args) do",
      "  $0",
      "end"
    ]
  },
  "def + spec": {
    "prefix": "defs",
    "body": [
      "@spec ${1:name}(${2:args}) :: ${3:no_return}",
      "def $1(${4:args}) do",
      "  $0",
      "end"
    ]
  },
  "def + doc + spec": {
    "prefix": "defsd",
    "body": [
      "@doc \"\"\"",
      "${1:doc}",
      "\"\"\"",
      "@spec ${2:name}(${3:args}) :: ${4:no_return}",
      "def $2(${5:args}) do",
      "  $0",
      "end"
    ]
  },
  "doc": {
    "prefix": "doc",
    "body": [
      "@doc \"\"\"",
      "$0",
      "\"\"\""
    ]
  },
  "doc false": {
    "prefix": "docf",
    "body": "@doc false"
  },
  "moduledoc": {
    "prefix": "mdoc",
    "body": [
      "@moduledoc \"\"\"",
      "$0",
      "\"\"\""
    ]
  },
  "moduledoc false": {
    "prefix": "mdocf",
    "body": "@moduledoc false"
  },
  "require": {
    "prefix": "req",
    "body": "require ${0:Logger}"
  },
  "test": {
    "prefix": "test",
    "body": [
      "test \"${1:name}\" do",
      "  $0",
      "end"
    ]
  },
  "describe": {
    "prefix": "desc",
    "body": [
      "describe \"${1:test group subject}\" do",
      "  $0",
      "end"
    ]
  }
}
